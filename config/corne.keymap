#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define WIN 0
#define RIG 1
#define LEF 2
#define TRI 3


/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri-layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  Y       │  BCKSPC  │
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp BACKSPACE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │  O       │
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >      │   ESC    │
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp esc
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
                                  &mo LEF    &kp enter  &kp lmeta      &kp lshift &kp space  &mo RIG
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  1       │  2       │  3       │  4       │  5       │   │  6       │  7       │  8       │  9       │  0       │
            &kp N1     &kp N2     &kp N3     &kp N4     &kp N5         &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  F1      │  F2      │  F3      │          |   |          │  F7      │  F8      │  F9      │          │
            &none      &kp F1     &kp F2     &kp F3     &none          &none      &kp F7     &kp F8     &kp F9     &none 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  F4      │  F5      │  F6      │          │   │          │  F10     │  F11     │  F12     │          │
            &none      &kp F4     &kp F5     &kp F6      &none          &none     &kp F10    &kp F11    &kp F12    &none 
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
                                  &trans     &trans     &trans         &trans     &trans     &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  `       │  ~       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  "       │  [       │  {       │  (       │          |   |  /       │  -       │   =      │  :       │   ;      │
            &kp DQT      &kp LARW   &kp DARW   &kp RARW &none          &kp FSLH   &kp MINUS   &kp EQUAL &kp COLON   &kp SEMI 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  '       │  ]       │  }       │  )       │          │   │  \       │  _       │  +       │  |       │  ?       │
            &kp SQT    &kp RBKT   &kp RBRC   &kp RPAR   &none          &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK 
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
                                  &trans     &trans     &trans         &trans     &trans     &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  PrintSc │  UP      │  INSERT  │ NEXTSONG │   │          │INC BRIGHT│DEC BRIGHT│          │          │
            &none      &kp PSCRN  &kp UARW   &kp INS    &kp C_NEXT     &none    &kp C_BRI_UP &kp C_BRI_DEC &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  LEFT    │  DOWN    │  RIGHT   │PAUSEMUSIC|   |          │  HOME    │  PAGE DN │  PAGE UP │  END     │
            &none      &kp LARW   &kp DARW   &kp RARW   &kp C_PP       &none      &kp HOME   &kp PG_DN  &kp PG_UP  &kp END 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │ VOL DOWN │ VOL MUTE │ VOL UP   │ PREVSONG │   │TOGGLE OUT│ BT NEXT  │ BT CLEAR │ BT PREV  │ CLEAR ALL│
            &none    &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &kp C_PREV &out OUT_TOG &bt BT_NXT &bt BT_CLR &bt BT_PRV &bt BT_CLR_ALL 
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
                                  &trans     &trans     &trans         &trans     &trans     &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};
