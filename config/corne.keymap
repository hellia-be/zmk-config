#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define WIN 0
#define RIG 1
#define LEF 2
#define TRI 3

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp Q  &kp W  &kp E  &kp R      &kp T               &kp Y      &kp U           &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F      &kp G               &kp H      &kp J           &kp K      &kp L    &kp SEMICOLON
  &kp Z  &kp X  &kp C  &kp V      &kp B               &kp N      &kp M           &kp COMMA  &kp DOT  &kp SLASH
                &mo 1  &kp SPACE  &kp LEFT_CONTROL    &kp ENTER  &kp LEFT_SHIFT  &mo 2
            >;
        };

        left_layer {
            bindings = <
  &kp N1      &kp N2             &kp N3         &kp N4     &kp N5       &kp NUMBER_6  &kp N7           &kp N8      &kp N9        &kp N0
  &kp ESCAPE  &kp LEFT_BRACKET   &kp SQT        &kp EQUAL  &kp GRAVE    &kp PSCRN     &kp C_VOLUME_UP  &kp C_MUTE  &kp C_VOL_DN  &kp BACKSPACE
  &kp TAB     &kp RIGHT_BRACKET  &kp BACKSLASH  &kp MINUS  &kp INS      &kp HOME      &kp PG_UP        &kp PG_DN   &kp END       &kp DEL
                                 &trans         &trans     &trans       &trans        &trans           &trans
            >;
        };

        right_layer {
            bindings = <
  &kp F11       &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT     &kp รง         &none   &kp C_BRIGHTNESS_INC  &kp UP_ARROW    &kp C_BRIGHTNESS_DEC  &kp F12
  &out OUT_TOG  &bt BT_NXT  &bt BT_CLR        &bt BT_PRV     &bt BT_CLR_ALL    &none   &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW       &none
  &kp F1        &kp F2      &kp F3            &kp F4         &kp F5            &kp F6  &kp F7                &kp F8          &kp F9                &kp F10
                            &trans            &kp LEFT_META  &trans            &trans  &kp LEFT_ALT          &trans
            >;
        };
    };
};
