/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        delete: delete {
            compatible = "zmk,behavior-tap-dance";
            label = "DELETE";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp DELETE>;
        };

        enter: enter {
            compatible = "zmk,behavior-tap-dance";
            label = "ENTER";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&mo 2>;
        };

        tab: tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings = <&kp LMETA>, <&kp TAB>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp BACKSPACE>;
        };

        space: space {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&mo 1>;
        };

        escape: escape {
            compatible = "zmk,behavior-tap-dance";
            label = "ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp Q  &kp W  &kp F    &mt PRINTSCREEN P  &kp B    &kp J       &kp L   &kp U      &mt INS Y   &mt HOME SQT
  &kp A  &kp R  &kp S    &kp T              &kp G    &kp M       &kp N   &kp E      &kp I       &kp O
  &kp Z  &kp X  &kp C    &kp D              &kp V    &kp K       &kp H   &kp COMMA  &kp PERIOD  &mt END SLASH
                &delete  &enter             &tab     &backspace  &space  &escape
            >;
        };

        sym_layer {
            bindings = <
  &none           &kp GRAVE   &kp UP_ARROW    &kp BACKSLASH  &none           &none   &none             &none              &none          &none
  &none           &kp LEFT    &kp DOWN_ARROW  &kp RIGHT      &none           &none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &none
  &bt BT_CLR_ALL  &bt BT_PRV  &bt BT_CLR      &bt BT_NXT     &out OUT_TOG    &none   &none             &none              &none          &none
                              &trans          &trans         &trans          &trans  &trans            &trans
            >;
        };

        num_layer {
            bindings = <
  &kp F1  &kp F2        &kp F3      &kp F4           &kp F5    &kp F6    &kp F7     &kp F8     &mt F11 F9    &mt F12 F10
  &kp N1  &kp N2        &kp N3      &kp N4           &kp N5    &kp N6    &kp N7     &kp N8     &kp N9        &kp N0
  &none   &kp C_VOL_DN  &kp K_MUTE  &kp C_VOLUME_UP  &none     &kp PLUS  &kp MINUS  &kp EQUAL  &kp ASTERISK  &kp SLASH
                        &trans      &trans           &trans    &trans    &trans     &trans
            >;
        };
    };
};
